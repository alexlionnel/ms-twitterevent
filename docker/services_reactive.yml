version: '3.9'

services:
  config-server:
    #image: alexlionnel/${GROUP_ID}.config-server:${SERVICE_VERSION:-latest}
    build: ./config-server
    ports:
      - "8888:8888"
    environment:
      - "ENCRYPT_KEY=config-key"
    networks:
      - ${GLOBAL_NETWORK:-services}

  twitter-to-kafka-service:
    #image: alexlionnel/${GROUP_ID}.twitter-to-kafka-service:${SERVICE_VERSION:-latest}
    build: ./twitter-to-kafka-service
    ports:
      - "9490:9490"
    environment:
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "KAFKA-CONFIG_TOPIC-NAME=twitter-topic"
      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=http://schema-registry:8081"
      - "TWITTER-TO-KAFKA-SERVICE_ENABLE-MOCK-TWEETS=false"
      - "SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888"
      - "ENCRYPT_KEY=config-key"
    networks:
      - ${GLOBAL_NETWORK:-services}
    depends_on:
      config-server:
        condition: service_healthy
      schema-registry:
        condition: service_healthy

  kafka-to-elastic-service:
    #image: ${GROUP_ID}/kafka.to.elastic.service:${SERVICE_VERSION:-latest}
    build: ./kafka-to-elastic-service
    ports:
      - "9491:9491"
    volumes:
      - "./docker-logs:/workspace/kafka-to-elastic-service/logs"
    depends_on:
      config-server:
        condition: service_healthy
      schema-registry:
        condition: service_healthy
      elastic-1:
        condition: service_healthy
    environment:
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "KAFKA-CONFIG_TOPIC-NAME=twitter-topic"
      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=http://schema-registry:8081"
      - "SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888"
      - "ELASTIC-CONFIG_INDEX-NAME=twitter-index"
      - "ELASTIC-CONFIG_CONNECTION-URL=http://elastic-1:9200"
      - "ENCRYPT_KEY=config-key"
    networks:
      - ${GLOBAL_NETWORK:-services}

  elastic-query-service:
    #image: ${GROUP_ID}/elastic.query.service:${SERVICE_VERSION:-latest}
    build: ./reactive-elastic-query-service
    ports:
      - "9492:9492"
    profiles:
      - donotstart
    volumes:
      - "./docker-logs:/workspace/elastic-query-service/logs"
    depends_on:
      config-server:
        condition: service_healthy
      schema-registry:
        condition: service_healthy
      elastic-1:
        condition: service_healthy
    environment:
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "ELASTIC-CONFIG_INDEX-NAME=twitter-index"
      - "ELASTIC-CONFIG_CONNECTION-URL=http://elastic-1:9200"
      - "SERVER_SERVLET_CONTEXT-PATH=/elastic-query-service"
      - "SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888"
      - "SPRING_ELASTICSEARCH_URIS=http://elastic-1:9200"
      - "ENCRYPT_KEY=config-key"
    networks:
      - ${GLOBAL_NETWORK:-services}

  elastic-query-web-client:
    #image: ${GROUP_ID}/elastic.query.web.client:${SERVICE_VERSION:-latest}
    build: ./reactive-elastic-query-web-client
    ports:
      - "9493:9493"
    profiles:
      - donotstart
    volumes:
      - "./docker-logs:/workspace/elastic-query-web-client/logs"
    depends_on:
      config-server:
        condition: service_healthy
      elastic-1:
        condition: service_healthy
    environment:
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "SERVER_SERVLET_CONTEXT-PATH=/elastic-query-web-client"
      - "SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888"
      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_BASE-URL=http://elastic-query-service/elastic-query-service/documents"
      - "ENCRYPT_KEY=config-key"
    networks:
      - ${GLOBAL_NETWORK:-services}
