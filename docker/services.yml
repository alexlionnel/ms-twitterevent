version: '3.9'

services:
  config-server-1:
    #image: alexlionnel/${GROUP_ID}.config-server:${SERVICE_VERSION:-latest}
    build: ./config-server
    ports:
      - "8888:8888"
    environment:
      - "SERVER_PORT=8888"
      - "LOG_APP-NAME=config-server-1"
      - "ENCRYPT_KEY=config-key"
    networks:
      - ${GLOBAL_NETWORK:-services}

  config-server-2:
    #image: alexlionnel/${GROUP_ID}.config-server:${SERVICE_VERSION:-latest}
    build: ./config-server
    ports:
      - "8889:8889"
    environment:
      - "SERVER_PORT=8889"
      - "LOG_APP-NAME=config-server-2"
      - "ENCRYPT_KEY=config-key"
    networks:
      - ${GLOBAL_NETWORK:-services}

  twitter-to-kafka-service:
    #image: alexlionnel/${GROUP_ID}.twitter-to-kafka-service:${SERVICE_VERSION:-latest}
    build: ./twitter-to-kafka-service
    ports:
      - "9490:9490"
    environment:
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "KAFKA-CONFIG_TOPIC-NAMES-TO-CREATE_0=twitter-topic"
      - "KAFKA-CONFIG_TOPIC-NAMES-TO-CREATE_1=twitter-analytics-topic"
      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=http://schema-registry:8081"
      - "TWITTER-TO-KAFKA-SERVICE_ENABLE-MOCK-TWEETS=false"
      - "SPRING_CLOUD_CONFIG_URI=http://config-server-1:8888,http://config-server-2:8889"
      - "SPRING_ZIPKIN_BASE-URL=http://zipkin:9411"
      - "SPRING_ZIPKIN_SENDER_TYPE=web"
      - "SPRING_SLEUTH_SAMPLER_PROBABILITY=1.0"
      - "ENCRYPT_KEY=config-key"
    networks:
      - ${GLOBAL_NETWORK:-services}
    depends_on:
      config-server-1:
        condition: service_healthy
      schema-registry:
        condition: service_healthy

  kafka-to-elastic-service:
    #image: ${GROUP_ID}/kafka.to.elastic.service:${SERVICE_VERSION:-latest}
    build: ./kafka-to-elastic-service
    ports:
      - "9491:9491"
    volumes:
      - "./docker-logs:/workspace/kafka-to-elastic-service/logs"
    depends_on:
      config-server-1:
        condition: service_healthy
      schema-registry:
        condition: service_healthy
      elastic-1:
        condition: service_healthy
    environment:
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "KAFKA-CONFIG_TOPIC-NAME=twitter-topic"
      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=http://schema-registry:8081"
      - "SPRING_CLOUD_CONFIG_URI=http://config-server-1:8888,http://config-server-2:8889"
      - "ELASTIC-CONFIG_INDEX-NAME=twitter-index"
      - "ELASTIC-CONFIG_CONNECTION-URL=http://elastic-1:9200"
      - "SPRING_ZIPKIN_SENDER_TYPE=kafka"
      - "SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
      - "SPRING_SLEUTH_SAMPLER_PROBABILITY=1.0"
      - "ENCRYPT_KEY=config-key"
    networks:
      - ${GLOBAL_NETWORK:-services}

  elastic-query-service:
    #image: ${GROUP_ID}/elastic.query.service:${SERVICE_VERSION:-latest}
    build: ./elastic-query-service
    ports:
      - "9492:9492"
    volumes:
      - "./docker-logs:/workspace/elastic-query-service/logs"
    depends_on:
      config-server-1:
        condition: service_healthy
      schema-registry:
        condition: service_healthy
      elastic-1:
        condition: service_healthy
    environment:
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "ELASTIC-CONFIG_INDEX-NAME=twitter-index"
      - "ELASTIC-CONFIG_CONNECTION-URL=http://elastic-1:9200"
      - "SERVER_SERVLET_CONTEXT-PATH=/"
      - "SPRING_CLOUD_CONFIG_URI=http://config-server-1:8888,http://config-server-2:8889"
      - "SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER-URI=http://keycloak-authorization-server:8082/auth/realms/twitterevent_realm"
      - "SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI=http://keycloak-authorization-server:8082/auth/realms/twitterevent_realm/protocol/openid-connect/certs"
      - "SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_TOKEN-URI=http://keycloak-authorization-server:8082/auth/realms/twitterevent_realm/protocol/openid-connect/token"
      - "SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-keycloak:5432/postgres?currentSchema=public&binaryTransfer=true&reWriteBatchedInserts=true"
      - "ELASTIC-QUERY-SERVICE_QUERY-FROM-KAFKA-STATE-STORE_URI=http://gateway-service/kafka-streams-service/get-word-count-by-word/{word}"
      - "ELASTIC-QUERY-SERVICE_QUERY-FROM-ANALYTICS-DATABASE_URI=http://gateway-service/analytics-service/get-word-count-by-word/{word}"
      - "ELASTIC-QUERY-SERVICE_WEBCLIENT_QUERY-TYPE=ANALYTICS_DATABASE"
      - "EUREKA_CLIENT_SERVICE-URL_DEFAULT-ZONE=http://discovery-service-1:8761/eureka/,http://discovery-service-2:8762/eureka/"
      - "SPRING_ZIPKIN_SENDER_TYPE=kafka"
      - "SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
      - "SPRING_SLEUTH_SAMPLER_PROBABILITY=1.0"
      - "ENCRYPT_KEY=config-key"
    networks:
      - ${GLOBAL_NETWORK:-services}

  elastic-query-web-client:
    #image: ${GROUP_ID}/elastic.query.web.client:${SERVICE_VERSION:-latest}
    build: ./elastic-query-web-client
    ports:
      - "9493:9493"
    volumes:
      - "./docker-logs:/workspace/elastic-query-web-client/logs"
    depends_on:
      config-server-1:
        condition: service_healthy
      elastic-1:
        condition: service_healthy
    environment:
      - "LOGGING_LEVEL_IO_DEMOBRAINS_TWITTEREVENT=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "SERVER_SERVLET_CONTEXT-PATH=/elastic-query-web-client"
      - "SPRING_CLOUD_CONFIG_URI=http://config-server-1:8888,http://config-server-2:8889"
      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_BASE-URL=http://gateway-service/elastic-query-service/documents"
      - "SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER-URI=http://keycloak-authorization-server:8082/auth/realms/microservices-realm"
      - "SECURITY_LOGOUT-SUCCESS-URL=http://elastic-query-web-client:9493/elastic-query-web-client"
      - "SECURITY_DEFAULT-CLIENT-REGISTRATION-ID=keycloak"
      - "EUREKA_CLIENT_SERVICE-URL_DEFAULT-ZONE=http://discovery-service-1:8761/eureka/,http://discovery-service-2:8762/eureka/"
      - "SPRING_ZIPKIN_SENDER_TYPE=kafka"
      - "SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
      - "SPRING_SLEUTH_SAMPLER_PROBABILITY=1.0"
      - "ENCRYPT_KEY=config-key"
    networks:
      - ${GLOBAL_NETWORK:-services}

  kafka-streams-service:
    #mage: ${GROUP_ID}/kafka.streams.service:${SERVICE_VERSION:-latest}
    build: ./kafka-streams-service
    ports:
      - "9494:9494"
    volumes:
      - "./docker-logs:/workspace/kafka-streams-service/logs"
    depends_on:
      config-server-1:
        condition: service_healthy
    profiles:
      - donotstart
    environment:
      - "LOGGING_LEVEL_IO_DEMOBRAINS_TWITTEREVENT=debug"
      - "LOGGING_LEVEL_ROOT=debug"
      - "SERVER_PORT=9494"
      - "SERVER_SERVLET_CONTEXT-PATH=/"
      - "SPRING_CLOUD_CONFIG_URI=http://config-server-1:8888,http://config-server-2:8889"
      - "SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER-URI=http://keycloak-authorization-server:8082/auth/realms/twitterevent_realm"
      - "SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI=http://keycloak-authorization-server:8082/auth/realms/twitterevent_realm/protocol/openid-connect/certs"
      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=http://schema-registry:8081"
      - "EUREKA_CLIENT_SERVICE-URL_DEFAULT-ZONE=http://discovery-service-1:8761/eureka/,http://discovery-service-2:8762/eureka/"
      - "SPRING_ZIPKIN_SENDER_TYPE=kafka"
      - "SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
      - "SPRING_SLEUTH_SAMPLER_PROBABILITY=1.0"
      - "ENCRYPT_KEY=config-key"
    networks:
      - ${GLOBAL_NETWORK:-services}

  analytics-service:
    #image: ${GROUP_ID}/analytics.service:${SERVICE_VERSION:-latest}
    build: ./analytics-service
    ports:
      - "9495:9495"
    volumes:
      - "./docker-logs:/workspace/analytics-service/logs"
    depends_on:
      config-server-1:
        condition: service_healthy
    profiles:
      - donotstart
    environment:
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "SERVER_PORT=8188"
      - "SERVER_SERVLET_CONTEXT-PATH=/"
      - "SPRING_CLOUD_CONFIG_URI=http://config-server-1:8888,http://config-server-2:8889"
      - "SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER-URI=http://keycloak-authorization-server:8082/auth/realms/twitterevent_realm"
      - "SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI=http://keycloak-authorization-server:8082/auth/realms/twitterevent_realm/protocol/openid-connect/certs"
      - "SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-keycloak:5432/postgres?currentSchema=analytics&binaryTransfer=true&reWriteBatchedInserts=true"
      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=http://schema-registry:8081"
      - "SPRING_ZIPKIN_SENDER_TYPE=kafka"
      - "SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
      - "SPRING_SLEUTH_SAMPLER_PROBABILITY=1.0"
      - "ENCRYPT_KEY=config-key"
    networks:
      - ${GLOBAL_NETWORK:-services}

  discovery-service-1:
    #image: ${GROUP_ID}/discovery.service:${SERVICE_VERSION:-latest}
    build: ./discovery-service
    ports:
      - "5014:5014"
      - "8761:8761"
    profiles:
      - donotstart
    volumes:
      - "./docker-logs:/workspace/discovery-service/logs"
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5014 -Xms128m -Xmx256m"
      - "LOGGING_LEVEL_ROOT=info"
      - "SERVER_PORT=8761"
      - "SPRING_PROFILES_ACTIVE=peer1"
      - "LOG_APP-NAME=discovery-service-1"
      - "EUREKA_INSTANCE_HOSTNAME=discovery-service-1"
      - "EUREKA_CLIENT_SERVICE-URL_DEFAULT-ZONE=http://discovery-service-1:8761/eureka/,http://discovery-service-2:8762/eureka/"
    networks:
      - ${GLOBAL_NETWORK:-services}

  discovery-service-2:
    #image: ${GROUP_ID}/discovery.service:${SERVICE_VERSION:-latest}
    build: ./discovery-service
    ports:
      - "5015:5015"
      - "8762:8762"
    profiles:
      - donotstart
    volumes:
      - "./docker-logs:/workspace/discovery-service/logs"
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5015 -Xms128m -Xmx256m"
      - "LOGGING_LEVEL_ROOT=info"
      - "SERVER_PORT=8762"
      - "SPRING_PROFILES_ACTIVE=peer2"
      - "LOG_APP-NAME=discovery-service-2"
      - "EUREKA_INSTANCE_HOSTNAME=discovery-service-2"
      - "EUREKA_CLIENT_SERVICE-URL_DEFAULT-ZONE=http://discovery-service-1:8762/eureka/,http://discovery-service-2:8761/eureka/"
    networks:
      - ${GLOBAL_NETWORK:-services}

  gateway-service-1:
    image: ${GROUP_ID}/gateway.service:${SERVICE_VERSION:-latest}
    ports:
      - "9590:9590"
    profiles:
      - donotstart
    volumes:
      - "./docker-logs:/workspace/gateway-service/logs"
    links:
      - "redis-master:redis"
    environment:
      - "LOGGING_LEVEL_ROOT=debug"
      - "SERVER_PORT=9590"
      - "SPRING_CLOUD_CONFIG_URI=http://config-server-1:8888,http://config-server-2:8889"
      - "SPRING_REDIS_HOST=redis"
      - "LOG_APP-NAME=gateway-service-1"
      - "EUREKA_CLIENT_SERVICE-URL_DEFAULT-ZONE=http://discovery-service-2:8762/eureka/,http://discovery-service-1:8761/eureka/"
      - "SPRING_ZIPKIN_SENDER_TYPE=kafka"
      - "SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
      - "SPRING_SLEUTH_SAMPLER_PROBABILITY=1.0"
      - "ENCRYPT_KEY=config-key"
    networks:
      - ${GLOBAL_NETWORK:-services}

  gateway-service-2:
    image: ${GROUP_ID}/gateway.service:${SERVICE_VERSION:-latest}
    ports:
      - "9591:9591"
    profiles:
      - donotstart
    volumes:
      - "./docker-logs:/workspace/gateway-service/logs"
    links:
      - "redis-master:redis"
    environment:
      - "LOGGING_LEVEL_ROOT=debug"
      - "SERVER_PORT=9591"
      - "SPRING_CLOUD_CONFIG_URI=http://config-server-1:8888,http://config-server-2:8889"
      - "SPRING_REDIS_HOST=redis"
      - "LOG_APP-NAME=gateway-service-2"
      - "EUREKA_CLIENT_SERVICE-URL_DEFAULT-ZONE=http://discovery-service-2:8762/eureka/,http://discovery-service-1:8761/eureka/"
      - "SPRING_ZIPKIN_SENDER_TYPE=kafka"
      - "SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
      - "SPRING_SLEUTH_SAMPLER_PROBABILITY=1.0"
      - "ENCRYPT_KEY=config-key"
    networks:
      - ${GLOBAL_NETWORK:-services}
