twitter-to-kafka-service:
  twitter-keywords:
    - java
    - microservices
    - spring
    - kafka
    - elasticsearch
  enable-mock-tweets: false
  mock-min-tweet-length: 5
  mock-max-tweet-length: 15
  mock-sleep-ms: 1000

retry-config:
  initial-interval-ms: 1000
  max-interval-ms: 1000
  multiplier: 2.0
  max-attempts: 3
  sleep-time-ms: 2000

kafka-config:
  bootstrap-servers: localhost:19092, localhost:29092, localhost:39092
  schema-registry-url-key: schema.registry.url
  schema-registry-url: http://localhost:8081
  topic-name: twitter-topic
  topic-names-to-create:
    - twitter-topic
  num-of-partitions: 3
  replication-factor: 3

kafka-producer-config:
  # serialisation de la clé du message kafka qui est un entier long
  key-serializer-class: org.apache.kafka.common.serialization.LongSerializer
  # serialisation de la valeur du message kafka qui est un entier long
  value-serializer-class: io.confluent.kafka.serializers.KafkaAvroSerializer
  # type de compression des messages kafka
  compression-type: snappy
  # acsk all => attendre la réponse de tous les réplicats quand on envoie un message. Autres valeurs : 1 ou 0
  acks: all
  batch-size: 16384
  batch-size-boost-factor: 100
  linger-ms: 5
  request-timeout-ms: 60000
  retry-count: 5

server:
  port: 9490